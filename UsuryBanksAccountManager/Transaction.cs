namespace UsuryBanksAccountManager;

/**
 * TransactionType enum - a boolean enum just because it is easier to read than using true/false
 * It does work basically like a boolean.
 */
public enum TransactionType
{
    Deposit,
    Withdrawal
}

public class Transaction
{
    private int Id { get; set; }     // simulates primary key
    private TransactionType Type { get; set; }
    private decimal Amount { get; set; }
    private DateTime Date { get; set; }
    public Customer Customer { get; set; }  // simulates foreign key
    
    
    
    // real constructor of how Entity Framework would create an object, the keys are generated by the database and not by the application
    public Transaction(TransactionType type, decimal amount, DateTime date)
    {
        Type = type;
        Amount = amount;
        Date = date;
    }
    
    // simulated constructor since we don't have a database
    public Transaction(int id, TransactionType type, decimal amount, DateTime date, Customer customer)
    {
        Id = id;
        Type = type;
        Amount = amount;
        Date = date;
        Customer = customer;
    }

    public TransactionInfo GetTransactionInfo()
    {
        return new TransactionInfo
        {
            CustomerName = Customer.Name.FirstName + " " + Customer.Name.LastName,
            Type = Type,
            Amount = Amount,
            Date = Date
        };   
    }
}

public struct TransactionInfo
{
    public string CustomerName { get; set; }
    public TransactionType Type { get; set; }
    public decimal Amount { get; set; }
    public DateTime Date { get; set; }
}